#!/bin/bash
#Netscaler External Service Script

#For external-service
. /utils.sh

wget https://raw.githubusercontent.com/datacenter/cloudcenter-content/master/services/netscaler_http/netscaler.json
wget https://raw.githubusercontent.com/datacenter/cloudcenter-content/master/services/netscaler_http/SetupNetScaler.py

print_log "Got to before env print"
print_log "$(env)"

env

cmd=$1
memberIPs=""

# RUN EVERYTHING AS ROOT
if [ "$(id -u)" != "0" ]; then
    exec sudo "$0" "$@"
fi


function setup_prereqs() {
  yum install -y epel-release
  yum -y install python34
  curl -O https://bootstrap.pypa.io/get-pip.py
  /usr/bin/python3.4 get-pip.py
  #yum install -y python-pip wget
  pip install requests --upgrade
  pip install jinja2
}

function getMembers() {
  for tier in $(echo $CliqrDependencies | tr "," "\n" )
  do
    members=CliqrTier_${tier}_IP
    for ip in $(echo ${!members} | tr "=" "\n" | tr "," "\n")
    do
#      memberIPs=$memberIPs"[\"$ip\"],"
      memberIPs=$memberIPs"[\$ip\],"
    done
    memberIPs=`echo $memberIPs |sed s'/.$//'`
  done
}
function createNetscalerParams() {

 sed -i "s/%netscaler_ip%/$netscaler_ip/g" netscaler.json
 sed -i "s/%ns_user%/$ns_user/g" netscaler.json
 sed -i "s/%ns_pwd%/$ns_pwd/g" netscaler.json
# sed -i "s/%ns_interfaces%/$ns_interfaces/g" netscaler.json
 sed -i "s/%ns_interfaces%/1\/2/g" netscaler.json
 sed -i "s/%ns_snips%/$ns_snips/g" netscaler.json
 sed -i "s/%ns_netmask%/$ns_netmask/g" netscaler.json
 sed -i "s/%ns_vip%/$ns_vip/g" netscaler.json
 sed -i "s/%ns_poolmembers%/$memberIPs/g" netscaler.json
}

function executionStatus() {
 FILE="status.txt"
 status=`cat $FILE`
 print_log "$status"

if grep -q "Error" "$FILE"; then
   exit 1
fi
 
 #if [ -f $FILE ];
 #then
 #   status=`cat $FILE`
 #   print_log "Configuration Failure"
 #   print_log "$status"
 #   exit 127   
 # else
 #   FILE="SUCCESS"
 #   status="Configuration Successful"
 #   print_log "$status"
 #fi
}

print_log "Installing pre requisites.."
setup_prereqs
print_log "Retrieving Members.."
getMembers
createNetscalerParams


case $cmd in
	start)
		print_log "Executing Service.."
		#sleep 3500
		python3 SetupNetScaler.py start >> status.txt
		#Call out to netscaler script to add nodes
		executionStatus
		;;
	stop)
		print_log "Deleting Service.."
		#Call out to netscaler script to remove nodes
		;;
	update)
		print_log "Updating Service.."
		#Call out to netscaler script to update nodes
		;;
	*)
		serviceStatus="No Valid Script Argument"
		exit 127
		;;
esac

